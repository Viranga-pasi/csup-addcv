[{"D:\\CSUP\\Project\\client\\src\\index.js":"1","D:\\CSUP\\Project\\client\\src\\validation\\store.js":"2","D:\\CSUP\\Project\\client\\src\\componenets\\viewSearch.js":"3"},{"size":644,"mtime":1608357147448,"results":"4","hashOfConfig":"5"},{"size":190,"mtime":1608357147451,"results":"6","hashOfConfig":"5"},{"size":2240,"mtime":1607880022455,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ap051a",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\CSUP\\Project\\client\\src\\index.js",[],"D:\\CSUP\\Project\\client\\src\\validation\\store.js",[],["16","17"],"D:\\CSUP\\Project\\client\\src\\componenets\\viewSearch.js",["18","19","20","21","22","23"],"import React, {useState, useEffect} from 'react';\r\n\r\nimport {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { fetchData } from \"../api/api\";\r\n\r\nfunction ViewSearch(props) {\r\n    const [data, setData] = useState([]);\r\n    const [name, setName] = useState();\r\n    const [result, setResult] = useState([]);\r\n    useEffect(async () => {\r\n      const fetchedData = await fetchData();\r\n      setData(fetchedData.data);\r\n      \r\n    },[]);\r\n    \r\n    let i = null;\r\n    useEffect(() => {\r\n        setName(props.name);\r\n        for(i=0; i<userDetails.name.length; i++){\r\n            const currentName = userDetails.name[i].split(' ');\r\n            let firstName = currentName[0];\r\n            let lastName = currentName[1];\r\n            if(name === currentName[1]){\r\n                \r\n                setResult(data[i]);\r\n                // console.log(\"get \"+ name+ \" \"+ i); \r\n            }\r\n            else if(name === currentName[0]){\r\n                \r\n                setResult(data[i]);\r\n                // console.log(\"get \"+ name+ \" \"+ i ); \r\n            }\r\n            else if(name === userDetails.name[i]){\r\n                \r\n                setResult(data[i]);\r\n                // console.log(\"get \"+ name+ \" \"+ i); \r\n            }\r\n            else{\r\n                // console.log(\"search not found\");\r\n            }\r\n            \r\n        }\r\n      });\r\n    // console.log(typeof name);\r\n    const userDetails = {\r\n        name: data.map((d) => d.item.name),  \r\n    };\r\n    const userId = {\r\n        itemId: data.map((d) => d.itemId),\r\n    \r\n    };\r\n    // console.log(\"search \"+ name); \r\n   \r\n\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Search result for \"{props.name}\"\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n           \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={props.onHide}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\n\r\n\r\nexport default ViewSearch;\r\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":10,"column":12,"nodeType":"30","messageId":"31","endLine":10,"endColumn":18},{"ruleId":"32","severity":1,"message":"33","line":11,"column":15,"nodeType":"34","endLine":15,"endColumn":6},{"ruleId":"32","severity":1,"message":"35","line":20,"column":15,"nodeType":"36","endLine":20,"endColumn":16},{"ruleId":"28","severity":1,"message":"37","line":22,"column":17,"nodeType":"30","messageId":"31","endLine":22,"endColumn":26},{"ruleId":"28","severity":1,"message":"38","line":23,"column":17,"nodeType":"30","messageId":"31","endLine":23,"endColumn":25},{"ruleId":"28","severity":1,"message":"39","line":49,"column":11,"nodeType":"30","messageId":"31","endLine":49,"endColumn":17},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'i' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]